from Crypto.Util.number import *

c = 1615801252655869934505105249860682851067784646124701348819381940778465353737589202970326785296831581267132321655012064683610573931415405916323721655600009 
p = 83016786801403328204147956653462961433580559997157392229833615018890680855517
q = 93883049566102508306169932012092033034162408407223166902200289471678582376407

#RSA public key 
e = 65537
n = 7793869110094713170346070604510229721784872185166802343215442842525204178762610244846427426601883936457532398859896207408894199175445731773389945676587419

phi = (p - 1) * (q - 1)
d = inverse(e, phi)

#pow(base, exponent, modulus)
print(long_to_bytes(pow(c, d, n)))